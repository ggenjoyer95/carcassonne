version: "3.8"

services:
  postgres:
    image: postgres:14
    container_name: carcassonne-postgres
    environment:
      POSTGRES_USER: carcassonne
      POSTGRES_PASSWORD: carcassonne
      POSTGRES_DB: carcassonne
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - carcassonne-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U carcassonne"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: carcassonne-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - carcassonne-network

  backend:
    build:
      context: ./carcassonne-server
      dockerfile: Dockerfile
    container_name: carcassonne-backend
    environment:
      - NODE_ENV=production
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=carcassonne
      - DB_PASSWORD=carcassonne
      - DB_NAME=carcassonne
      - JWT_SECRET=your_jwt_secret_key_here
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - carcassonne-network
    volumes:
      - ./carcassonne-server:/app
    command: ["npm", "start"]

  frontend:
    build:
      context: ./carcassonne-frontend
      dockerfile: Dockerfile
    container_name: carcassonne-frontend
    environment:
      - REACT_APP_API_URL=http:
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    networks:
      - carcassonne-network
    volumes:
      - ./carcassonne-frontend:/app
      - ./shared:/app/shared
    command: npm start

networks:
  carcassonne-network:
    driver: bridge

volumes:
  postgres_data:
